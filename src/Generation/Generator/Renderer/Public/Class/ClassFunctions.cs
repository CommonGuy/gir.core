using System;
using System.Linq;
using Generator.Model;

namespace Generator.Renderer.Public;

internal static class ClassFunctions
{
    public static string Render(GirModel.Class cls)
    {
        var newModifier = cls.Parent is null
            ? string.Empty
            : "new ";

        return $@"
using System;
using System.Linq;
using GObject;
using System.Runtime.InteropServices;

#nullable enable

namespace {Namespace.GetPublicName(cls.Namespace)};

// AUTOGENERATED FILE - DO NOT MODIFY

public partial class {cls.Name} : GObject.GTypeProvider, GObject.InstanceFactory
{{

    public static {newModifier}GObject.Type GetGType()
    {{
        return {RenderGetGType(cls.TypeFunction)};
    }}

    static object GObject.InstanceFactory.Create(IntPtr handle, bool ownsHandle)
    {{
        return CreateIntern(handle, ownsHandle);
    }}

    private static {cls.Name} CreateIntern(IntPtr handle, bool ownsHandle)
    {{
        return {RenderObjectFactory(cls)};
    }}

    {cls.Functions
        .Select(FunctionRenderer.Render)
        .Join(Environment.NewLine)}
}}";
    }

    private static string RenderGetGType(GirModel.Function function)
    {
        return $"{Namespace.GetInternalName(function.Namespace)}.{function.Parent!.Name}.{Function.GetName(function)}()";
    }

    private static string RenderObjectFactory(GirModel.Class cls)
    {
        return $"new {cls.Name}(new {Class.GetFullyQualifiedInternalHandleName(cls)}(handle, ownsHandle))";
    }
}
