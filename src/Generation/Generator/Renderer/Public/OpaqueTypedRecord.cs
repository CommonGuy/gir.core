using System;
using System.Linq;
using Generator.Model;

namespace Generator.Renderer.Public;

internal static class OpaqueTypedRecord
{
    public static string Render(GirModel.Record record)
    {
        var name = Model.OpaqueTypedRecord.GetPublicClassName(record);
        var internalHandleName = Model.OpaqueTypedRecord.GetFullyQuallifiedOwnedHandle(record);

        return $@"
using System;
using System.Linq;
using System.Runtime.InteropServices;
using System.Runtime.Versioning;

#nullable enable

namespace {Namespace.GetPublicName(record.Namespace)};

// AUTOGENERATED FILE - DO NOT MODIFY

{PlatformSupportAttribute.Render(record as GirModel.PlatformDependent)}
public partial class {name}
{{
    public {internalHandleName} Handle {{ get; }}

    public {name}({internalHandleName} handle)
    {{
        Handle = handle;
        Initialize();
    }}

    // Implement this to perform additional steps in the constructor
    partial void Initialize();

    {record.Constructors
        .Select(ConstructorRenderer.Render)
        .Join(Environment.NewLine)}

    {FunctionRenderer.Render(record.TypeFunction)}

    {record.Functions
        .Select(FunctionRenderer.Render)
        .Join(Environment.NewLine)}

    {record.Methods
        .Where(Method.IsEnabled)
        .Select(MethodRenderer.Render)
        .Join(Environment.NewLine)}
}}";
    }
}
